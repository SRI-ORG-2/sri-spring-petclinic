# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run Aqua scanner
      uses: docker://aquasec/aqua-scanner
      with:
        args: trivy fs --sast --scanners misconfig,vuln,secret --db-repository=registry.aquasec.com/trivy-db:2 --checks-bundle-repository=registry.aquasec.com/trivy-checks:1 --java-db-repository=registry.aquasec.com/trivy-java-db:1 .
          # Access Aqua credentials from secret

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        TRIVY_RUN_AS_PLUGIN: 'aqua'
        ACTIONS_RUNTIME_TOKEN: ${{ secrets.TOKEN }} 
        AQUA_KEY: ${{ secrets.AQUA_KEY }}
        AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
        TRIVY_USERNAME: ${{ secrets.TRIVY_USERNAME }}
        TRIVY_PASSWORD: ${{ secrets.TRIVY_PASSWORD }}
        CSPM_URL: https://api.cloudsploit.com
        AQUA_URL: https://api.supply-chain.cloud.aquasec.com
  # Might not be needed depending on your workflow setup

# Remove these lines and store credentials as secrets ins
